#include <dos.h>
union REGS reg,a;
struct SREGS  sreg;
struct values
 {int ascii,scan;}val;
 values getkey()
  {
   a.h.al=a.h.ah=0;
   int86(22,&a,&a);
   val.ascii=a.h.al;
   val.scan=a.h.ah;
   return val;
  }
  void refresh()
  {
   a.h.al=a.h.ah=2;
   val.ascii=val.scan=0;
  }
static char cursor1[]={
  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,
  0x03,0xC0,0x07,0xE0,0x0F,0xF0,0x07,0xE0,
  0x03,0xC0,0x01,0x80,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
  0x00,0x00,0xFE,0x7F,0x06,0x60,0x0C,0x30,
  0x18,0x18,0x30,0x0C,0x60,0x06,0xC0,0x03,
  0x60,0x06,0x30,0x0C,0x98,0x19,0xCC,0x33,
  0xE6,0x67,0xFE,0x7F,0x00,0x00,0x00,0x00
  };
static int cursor2[]={
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF
  };
  static int cursor3[]={
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
  };

  static int cursor4[]={
  0xe1ff,0xe1ff,0xe1ff,0xe1ff,0xe1ff,0xe000,0xe000,0xe000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x1e00,0x1200,0x1200,0x1200,0x13ff,0x1249,0x1249,0xf249,
  0x9001,0x9001,0x9001,0x8001,0x8001,0x8001,0xffff,0x0000
  };
  static int cursor5[]={
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x1ff8,0x2004,0x4002,0x8001,0x9e3d,0x9e3d,0x9e3d,0x8001,
  0x8001,0x9819,0x8c31,0x87e1,0x83c1,0x4002,0x2004,0x1ff8,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
  };
  static int cursor6[]={
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
  0x0000,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,
  0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x0000
 };
  static int cursor7[]={
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
  0x000C,0x000C,0x0021,0x0392,0x044C,0x0820,0x0024,0x006A,
  0x40C1,0xA079,0x2025,0x1015,0x1812,0x0C10,0x0360,0x01C0
  };
  static int cursor8[]={
  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0xF81F,0xF81F,
  0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,0xF81F,
  0x0000,0x7FFE,0x7FFE,0x7FFE,0x7FFE,0x0000,0x03C0,0x03C0,
  0x03C0,0x03C0,0x03C0,0x03C0,0x03C0,0x03C0,0x03C0,0x0000
 };
  static int cursor9[]={
  0xFDFF,0xF8FF,0xF8FF,0xF8FF,0xF83F,0xF80F,0x8803,0x8003,
  0xC001,0xE001,0xE001,0xF003,0xF003,0xF80F,0xF807,0xF807,
  0x0000,0x0200,0x0200,0x0200,0x0200,0x0280,0x02A0,0x32A8,
  0x1FFC,0x0FFC,0x0FFC,0x07F8,0x07F8,0x03F0,0x03F0,0x0000
  };
#define ax reg.x.ax
#define bx reg.x.bx
#define cx reg.x.cx
#define dx reg.x.dx
#define si reg.x.si
#define di reg.x.di
#define al reg.h.al
#define ah reg.h.ah
#define bl reg.h.bl
#define bh reg.h.bh
#define cl reg.h.cl
#define ch reg.h.ch
#define dl reg.h.dl
#define dh reg.h.dh
#define es sreg.es
#define cs sreg.cs
#define ds sreg.ds
#define ss sreg.ss
void mouse(int m)
{ ax=m;
  int86x(0x33,&reg,&reg,&sreg);
}
void findmouse() {mouse(0);}
void showmouse() {mouse(1);}
void hidemouse() {mouse(2);}
void getstatus() {mouse(3);}
void setcursor(int x=0,int y=0)
{ cx=x;
  dx=y;
  mouse(4);
}
int buttonpress()
{
  mouse(5);
  return bx;
}
int buttonrelease()
{
  mouse(6);
  return bx;
}
void setmouselimit(int minx=0,int maxx=639,int miny=0,int maxy=479)
{ cx=minx;
  dx=maxx;
  mouse(7);
  cx=miny;
  dx=maxy;
  mouse(8);
}
void changemouse(int ac=0)
{ if(ac==0)
  { hidemouse();
    findmouse();
    showmouse();
  }
  if(ac==1)
  { bx=7;
    cx=7;
    dx=FP_OFF(cursor1);  /* HOUR GLASS */
    es=FP_SEG(cursor1);
  }
  if(ac==2)
  { bx=7;
    cx=7;
    dx=FP_OFF(cursor2);   /* CONTRAST SQUARE */
    es=FP_SEG(cursor2);
  }
    if(ac==3)
  { bx=5;
    cx=0;
    dx=FP_OFF(cursor3);  /* BLACK SQUARE */
    es=FP_SEG(cursor3);
  }
  if(ac==4)
  { bx=3;
    cx=-1;
    dx=FP_OFF(cursor4);  /* ROBOT HAND */
    es=FP_SEG(cursor4);
  }
  if(ac==5)
  { bx=7;
    cx=7;
    dx=FP_OFF(cursor5);  /* SMILING FACE */
    es=FP_SEG(cursor5);
  }
  if(ac==6)
  { bx=7;
    cx=7;
    dx=FP_OFF(cursor6);  /* MS PAINT ERASER */
    es=FP_SEG(cursor6);
  }
  if(ac==7)
  { bx=7;
    cx=7;
    dx=FP_OFF(cursor7);  /* AUM */
    es=FP_SEG(cursor7);
  }
  if(ac==8)
  { bx=8;
    cx=16;
    dx=FP_OFF(cursor8);  /* RESISTANCE KEY */
    es=FP_SEG(cursor8);
  }
  if(ac==9)
  { bx=7;
    cx=-1;
    dx=FP_OFF(cursor9);  /* HUMAN HAND */
    es=FP_SEG(cursor9);
  }
  mouse(9);
}
void setmouseroutine(int k,void (*routine)())
{ cx=k;
  dx=FP_OFF(routine);
  es=FP_SEG(routine);
  mouse(12);
}






